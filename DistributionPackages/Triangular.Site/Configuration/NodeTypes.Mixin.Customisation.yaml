##
# Mixins allow to you define multiple properties, default values or
# configurations in a reusable manner.
#
# While you could just define two node presets for the two properties,
# and reuse property definitions that way, this example should how you
# can orchestrate a set of properties. In many many cases you will have
# a Fusion component, which expects exactly one set of these properties.
#
# You could for example have a HeaderImage mixin, consisting of a headline
# and a image asset, and then a Fusion component HeaderImage which renders
# these properties as a header. Each document NodeType which supports a header
# get's the mixin and renders the matching Fusion component.
##
'Triangular.Site:Mixin.StandardCustomisation':
  abstract: true
  ui:
    inspector:
      groups:
        customisation:
          label: 'Customisation'
  properties:
    centering:
      type: string
      defaultValue: ''
      ui:
        label: 'Content Alignment'
        reloadIfChanged: true
        inspector:
          group: customisation
          editor: Content/Inspector/Editors/SelectBoxEditor
          editorOptions:
            placeholder: 'Default'
            values:
              justify:
                label: 'Justify'
              left:
                label: 'Left'
              center:
                label: 'Center'
              right:
                label: 'Right'
    color:
      type: string
      defaultValue: ''
      ui:
        label: 'Foreground Color'
        reloadIfChanged: true
        inspector:
          group: 'customisation'
          editor: Content/Inspector/Editors/SelectBoxEditor
          editorOptions:
            values:
              accentColor:
                label: 'Accent Color'
              tintColor:
                label: 'Tint Color'
              themeColor:
                label: 'Theme Color'
              secondaryColor:
                label: 'Secondary Color'
